// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Project_Work_My_Telegram_bot;

#nullable disable

namespace Project_Work_My_Telegram_bot.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Project_Work_My_Telegram_bot.ClassDB.CarDrive", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CarId"));

                    b.Property<string>("CarName")
                        .HasColumnType("text");

                    b.Property<string>("CarNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("GasСonsum")
                        .HasColumnType("double precision");

                    b.Property<string>("TypeFuel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CarId");

                    b.HasAlternateKey("CarNumber");

                    b.ToTable("CarDrives");
                });

            modelBuilder.Entity("Project_Work_My_Telegram_bot.ClassDB.ObjectPath", b =>
                {
                    b.Property<int>("IdPath")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPath"));

                    b.Property<int?>("CarDriveCarId")
                        .HasColumnType("integer");

                    b.Property<int?>("CarId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DatePath")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ObjectName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("PathLengh")
                        .HasColumnType("real");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("IdPath");

                    b.HasIndex("CarDriveCarId");

                    b.HasIndex("CarId");

                    b.ToTable("ObjectPaths");
                });

            modelBuilder.Entity("Project_Work_My_Telegram_bot.ClassDB.OtherExpenses", b =>
                {
                    b.Property<int>("ExpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ExpId"));

                    b.Property<decimal>("Coast")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("DateTimeExp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NameExpense")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("ExpId");

                    b.HasIndex("UserId");

                    b.ToTable("OtherExpenses");
                });

            modelBuilder.Entity("Project_Work_My_Telegram_bot.ClassDB.User", b =>
                {
                    b.Property<int>("IdTg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTg"));

                    b.Property<int>("CarId")
                        .HasColumnType("integer");

                    b.Property<string>("JobTitlel")
                        .HasColumnType("text");

                    b.Property<string>("TgUserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.Property<string>("UserRol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdTg");

                    b.HasIndex("CarId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Project_Work_My_Telegram_bot.ClassDB.ObjectPath", b =>
                {
                    b.HasOne("Project_Work_My_Telegram_bot.ClassDB.CarDrive", "CarDrive")
                        .WithMany()
                        .HasForeignKey("CarDriveCarId");

                    b.HasOne("Project_Work_My_Telegram_bot.ClassDB.User", "UserPath")
                        .WithMany("ObjectPath")
                        .HasForeignKey("CarId");

                    b.Navigation("CarDrive");

                    b.Navigation("UserPath");
                });

            modelBuilder.Entity("Project_Work_My_Telegram_bot.ClassDB.OtherExpenses", b =>
                {
                    b.HasOne("Project_Work_My_Telegram_bot.ClassDB.User", "UserExp")
                        .WithMany("OtherExpenses")
                        .HasForeignKey("UserId");

                    b.Navigation("UserExp");
                });

            modelBuilder.Entity("Project_Work_My_Telegram_bot.ClassDB.User", b =>
                {
                    b.HasOne("Project_Work_My_Telegram_bot.ClassDB.CarDrive", "CarDrive")
                        .WithMany("Users")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarDrive");
                });

            modelBuilder.Entity("Project_Work_My_Telegram_bot.ClassDB.CarDrive", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Project_Work_My_Telegram_bot.ClassDB.User", b =>
                {
                    b.Navigation("ObjectPath");

                    b.Navigation("OtherExpenses");
                });
#pragma warning restore 612, 618
        }
    }
}
